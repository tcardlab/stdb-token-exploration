"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateFiles = generateFiles;
const fs = __importStar(require("fs"));
const path = __importStar(require("path/posix"));
function generateFiles(runtime) {
    const out = runtime.build();
    const madeDirs = new Set();
    const mkdirIfNeeded = (dir) => {
        if (madeDirs.has(dir))
            return;
        madeDirs.add(dir);
        console.log('mkdir', dir);
        fs.mkdirSync(dir);
    };
    for (const [filepath, content] of out) {
        const newFilepath = path.join('docs', filepath);
        const parts = newFilepath.split(path.sep);
        for (let i = 1; i < parts.length; i++) {
            const dir = path.join(...parts.slice(0, i));
            mkdirIfNeeded(dir);
        }
        console.log('writefile', newFilepath);
        fs.writeFileSync(newFilepath, content);
    }
}
